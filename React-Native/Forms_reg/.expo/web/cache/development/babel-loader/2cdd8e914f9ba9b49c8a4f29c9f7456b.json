{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"@expo/vector-icons/AntDesign\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Register = function (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props);\n\n    _this.goToLogin = function () {\n      var navigate = _this.props.navigation.navigate;\n      navigate(\"Login\");\n    };\n\n    _this.UserRegistrationFunction = function () {\n      var UserName = _this.state.UserName;\n      var UserEmail = _this.state.UserEmail;\n      var UserPassword = _this.state.UserPassword;\n      fetch('http://192.168.1.2:8000', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: UserName,\n          email: UserEmail,\n          password: UserPassword\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        Alert.alert(responseJson);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    };\n\n    _this.state = {\n      UserName: '',\n      UserEmail: '',\n      UserPassword: ''\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: {\n          backgroundColor: \"#fff\",\n          height: \"100%\"\n        },\n        children: [_jsx(Image, {\n          source: require(\"../assets/register.png\"),\n          style: {\n            width: \"100%\",\n            height: \"50%\"\n          }\n        }), _jsx(Text, {\n          style: {\n            fontSize: 30,\n            fontFamily: \"SemiBold\",\n            alignSelf: \"center\"\n          },\n          children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n        }), _jsx(Text, {\n          style: {\n            fontFamily: \"Regular\",\n            marginHorizontal: 55,\n            textAlign: \"center\",\n            marginTop: 5,\n            opacity: 0.6,\n            fontSize: 15\n          },\n          children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0438 \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u044B\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043B\\u044F \\u043F\\u043E\\u0432\\u044B\\u0448\\u0435\\u043D\\u0438\\u044F \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u043B\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438. \\u042D\\u0442\\u043E \\u043D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u043E \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u043E\\u0434\\u0438\\u043D \\u0440\\u0430\\u0437.\"\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginHorizontal: 55,\n            borderWidth: 2,\n            marginTop: 30,\n            paddingHorizontal: 10,\n            borderColor: \"#00716F\",\n            borderRadius: 23,\n            paddingVertical: 2\n          },\n          children: [_jsx(Icon, {\n            name: \"user\",\n            color: \"#00716F\",\n            size: 24\n          }), _jsx(TextInput, {\n            style: {\n              paddingHorizontal: 10\n            },\n            onChangeText: function onChangeText(UserName) {\n              return _this2.setState({\n                UserName: UserName\n              });\n            },\n            placeholder: \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginHorizontal: 55,\n            borderWidth: 2,\n            marginTop: 10,\n            paddingHorizontal: 10,\n            borderColor: \"#00716F\",\n            borderRadius: 23,\n            paddingVertical: 2\n          },\n          children: [_jsx(Icon, {\n            name: \"mail\",\n            color: \"#00716F\",\n            size: 24\n          }), _jsx(TextInput, {\n            style: {\n              paddingHorizontal: 10\n            },\n            onChangeText: function onChangeText(UserEmail) {\n              return _this2.setState({\n                UserEmail: UserEmail\n              });\n            },\n            placeholder: \"Email\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginHorizontal: 55,\n            borderWidth: 2,\n            marginTop: 10,\n            paddingHorizontal: 10,\n            borderColor: \"#00716F\",\n            borderRadius: 23,\n            paddingVertical: 2\n          },\n          children: [_jsx(Icon, {\n            name: \"lock\",\n            color: \"#00716F\",\n            size: 24\n          }), _jsx(TextInput, {\n            style: {\n              paddingHorizontal: 10\n            },\n            onChangeText: function onChangeText(UserPassword) {\n              return _this2.setState({\n                UserPassword: UserPassword\n              });\n            },\n            placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            secureTextEntry: true\n          })]\n        }), _jsx(View, {\n          style: {\n            marginHorizontal: 55,\n            alignItems: \"center\"\n          },\n          children: _jsx(TouchableOpacity, {\n            style: {\n              backgroundColor: \"teal\",\n              height: 45,\n              marginTop: 20,\n              borderRadius: 15,\n              alignItems: \"center\"\n            },\n            onPress: this.UserRegistrationFunction,\n            children: _jsx(Text, {\n              style: {\n                color: \"white\",\n                padding: 12,\n                paddingHorizontal: 20,\n                fontWeight: \"bold\",\n                fontSize: 16\n              },\n              children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n            })\n          })\n        }), _jsx(View, {\n          style: {\n            marginHorizontal: 55,\n            alignItems: \"center\"\n          },\n          children: _jsx(TouchableOpacity, {\n            style: {\n              backgroundColor: \"white\",\n              height: 25,\n              marginTop: 12,\n              borderRadius: 0,\n              alignItems: \"center\"\n            },\n            onPress: function onPress() {\n              return _this2.goToLogin();\n            },\n            children: _jsx(Text, {\n              style: {\n                fontFamily: \"Medium\",\n                fontSize: 16\n              },\n              children: \"\\u0423\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F? \\u0412\\u043E\\u0439\\u0442\\u0438\"\n            })\n          })\n        })]\n      });\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nexport { Register as default };","map":{"version":3,"sources":["C:/Users/admin/Documents/2_курс_СЕМЫ/Семы по мобилке/React-native projects/CD26/screens/Register.js"],"names":["React","Icon","Register","props","goToLogin","navigate","navigation","UserRegistrationFunction","UserName","state","UserEmail","UserPassword","fetch","method","headers","body","JSON","stringify","name","email","password","then","response","json","responseJson","Alert","alert","catch","error","console","backgroundColor","height","require","width","fontSize","fontFamily","alignSelf","marginHorizontal","textAlign","marginTop","opacity","flexDirection","alignItems","borderWidth","paddingHorizontal","borderColor","borderRadius","paddingVertical","setState","color","padding","fontWeight","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {Text, View, Image, TextInput, TouchableOpacity, Alert, StyleSheet} from 'react-native';\nimport Icon from \"@expo/vector-icons/AntDesign\"\n\nexport default class Register extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      UserName: '',\n      UserEmail: '',\n      UserPassword: ''\n    }\n  }\n\n  goToLogin = () => {\n    const {navigate} = this.props.navigation\n    navigate(\"Login\")\n  }\n\n  UserRegistrationFunction = () => {\n\n    const { UserName }  = this.state ;\n    const { UserEmail }  = this.state ;\n    const { UserPassword }  = this.state ;\n\n    fetch('http://192.168.1.2:8000', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name: UserName,\n        email: UserEmail,\n        password: UserPassword\n      })\n\n    }).then((response) => response.json())\n        .then((responseJson) => {\n\n          // Showing response message coming from server after inserting records.\n          Alert.alert(responseJson);\n\n        }).catch((error) => {\n      console.error(error);\n    });\n  }\n\n  render() {\n    return (\n        <View style={{ backgroundColor: \"#fff\", height: \"100%\" }}>\n          <Image source={require(\"../assets/register.png\")}\n            style={{ width: \"100%\", height: \"50%\" }}/>\n          <Text style={{ fontSize: 30, fontFamily: \"SemiBold\", alignSelf: \"center\" }}>\n            Регистрация\n          </Text>\n          <Text style={{\n            fontFamily: \"Regular\",\n            marginHorizontal: 55,\n            textAlign: \"center\",\n            marginTop: 5,\n            opacity: 0.6,\n            fontSize: 15,\n          }}>\n            Введите свои персональные данные для повышения персонализации.\n            Это необходимо только один раз.\n          </Text>\n          <View style={{\n            flexDirection:\"row\",\n            alignItems:\"center\",\n            marginHorizontal: 55,\n            borderWidth: 2,\n            marginTop: 30,\n            paddingHorizontal: 10,\n            borderColor: \"#00716F\",\n            borderRadius: 23,\n            paddingVertical: 2,\n          }}>\n            <Icon name=\"user\" color=\"#00716F\" size={24} />\n            <TextInput style={{ paddingHorizontal: 10 }}\n                       onChangeText={UserName => this.setState({UserName})}\n                       placeholder=\"Имя пользователя\" />\n          </View>\n          <View style={{\n            flexDirection:\"row\",\n            alignItems:\"center\",\n            marginHorizontal: 55,\n            borderWidth: 2,\n            marginTop: 10,\n            paddingHorizontal: 10,\n            borderColor: \"#00716F\",\n            borderRadius: 23,\n            paddingVertical: 2,\n          }}>\n            <Icon name=\"mail\" color=\"#00716F\" size={24} />\n            <TextInput style={{ paddingHorizontal: 10 }}\n                       onChangeText={UserEmail => this.setState({UserEmail})}\n                       placeholder=\"Email\" />\n          </View>\n          <View style={{\n            flexDirection:\"row\",\n            alignItems:\"center\",\n            marginHorizontal: 55,\n            borderWidth: 2,\n            marginTop: 10,\n            paddingHorizontal: 10,\n            borderColor: \"#00716F\",\n            borderRadius: 23,\n            paddingVertical: 2,\n          }}>\n            <Icon name=\"lock\" color=\"#00716F\" size={24} />\n            <TextInput style={{ paddingHorizontal: 10 }}\n                       onChangeText={UserPassword => this.setState({UserPassword})}\n                       placeholder=\"Пароль\" secureTextEntry />\n          </View>\n          <View style={{ marginHorizontal: 55, alignItems: \"center\" }} >\n            <TouchableOpacity style={{\n              backgroundColor: \"teal\",\n              height: 45,\n              marginTop: 20,\n              borderRadius: 15,\n              alignItems: \"center\",\n            }} onPress={this.UserRegistrationFunction}>\n              <Text style={{\n                color: \"white\",\n                padding: 12,\n                paddingHorizontal: 20,\n                fontWeight: \"bold\",\n                fontSize: 16,\n              }}>\n                Зарегистрироваться\n              </Text>\n            </TouchableOpacity>\n          </View>\n          <View style={{ marginHorizontal: 55, alignItems: \"center\" }} >\n            <TouchableOpacity style={{\n              backgroundColor: \"white\",\n              height: 25,\n              marginTop: 12,\n              borderRadius: 0,\n              alignItems: \"center\",\n            }} onPress={() => this.goToLogin()}>\n              <Text style={{\n                fontFamily: \"Medium\",\n                fontSize: 16,\n              }}>\n                Уже есть регистрация? Войти\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}